name: Build Debian Package

permissions:
  contents: write # Needed to create/update releases and tags

on:
  push:
    branches:
      - main # Or your primary branch name
      # - master # Remove if 'main' is your only primary branch
  pull_request:
    branches:
      - main # Or your primary branch name
      # - master

jobs:
  build:
    runs-on: ubuntu-latest # We'll use Docker for the actual Debian environment
    env:
      DEBIAN_REVISION: "1"             # Your packaging revision for this upstream version
      CONTINUOUS_RELEASE_TAG: "latest-main-build" # Fixed tag for continuous releases

    strategy:
      matrix:
        # For now, only Debian Bookworm. Can expand later.
        # dist variable is no longer used for container image if we hardcode golang version
        dist: [bookworm] # Still useful for changelog and artifact naming
        arch: [amd64] # Can expand to arm64 later with QEMU or dedicated runners

    container:
      image: golang:1.23.1-bookworm # Use specific Go version on Bookworm base

    steps:
      - name: Checkout fan2go-package (this repo)
        uses: actions/checkout@v4
        with:
          path: fan2go-package # Checkout this packaging repo

      - name: Fetch upstream version
        id: fetch_upstream_version
        run: |
          VERSION=$(curl -s https://raw.githubusercontent.com/markusressel/fan2go/refs/heads/master/Makefile | grep -E 'VERSION\s*\?=' | awk '{print $3}')
          echo "UPSTREAM_VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "UPSTREAM_REF=$VERSION" >> $GITHUB_OUTPUT
          echo "Using upstream version: $VERSION"
        shell: bash

      - name: Checkout upstream fan2go source
        uses: actions/checkout@v4
        with:
          repository: markusressel/fan2go
          ref: ${{ steps.fetch_upstream_version.outputs.UPSTREAM_REF }}
          path: fan2go-package/_upstream_src
          fetch-depth: 0

      - name: Install build dependencies
        run: |
          apt-get update -qq
          apt-get install -y --no-install-recommends \
            build-essential \
            debhelper \
            dh-golang \
            devscripts \
            lintian \
            git \
            ca-certificates \
            libsensors-dev \
            help2man
          # Note: Go (golang-*) is provided by the base container image (e.g., golang:1.23.1-bookworm)
          # and was therefore removed from the apt-get install list above.
        shell: bash

      - name: Prepare packaging files
        run: |
          # Copy the debian directory from our packaging repo into the upstream source checkout
          # because dpkg-buildpackage expects it there.
          cp -r fan2go-package/debian fan2go-package/_upstream_src/
        shell: bash
      
      - name: Update changelog for continuous build
        id: changelog_update_step # Add an ID to this step
        # This step runs on pushes to main (or your primary branch)
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        env:
          DEBEMAIL: "johnwbyrd@gmail.com"
          DEBFULLNAME: "John Byrd"
        run: |
          echo "Updating changelog for continuous build..."
          UPSTREAM_VERSION_NUM=${{ steps.fetch_upstream_version.outputs.UPSTREAM_VERSION }}
          PACKAGING_SHA_SHORT=$(echo "${{ github.sha }}" | cut -c1-7)
          BUILD_TIMESTAMP=$(date +%Y%m%d%H%M%S)
          
          # Construct version: <upstream_version>-<debian_revision>+git<timestamp>.<packaging_sha>~<dist>1
          FULL_DEB_VERSION_BASE="${UPSTREAM_VERSION_NUM}-${{ env.DEBIAN_REVISION }}+git${BUILD_TIMESTAMP}.${PACKAGING_SHA_SHORT}"
          FULL_DEB_VERSION_WITH_DIST="${FULL_DEB_VERSION_BASE}~${{ matrix.dist }}1"
          
          echo "Upstream base version: ${UPSTREAM_VERSION_NUM}"
          echo "Packaging SHA: ${PACKAGING_SHA_SHORT}"
          echo "Timestamp: ${BUILD_TIMESTAMP}"
          echo "Calculated Full Debian version for changelog: ${FULL_DEB_VERSION_WITH_DIST}"
          
          cd fan2go-package/_upstream_src
          
          # Add the new version entry
          dch --newversion "${FULL_DEB_VERSION_WITH_DIST}" \
            --distribution "unstable" \
            "Automated continuous build from packaging commit ${PACKAGING_SHA_SHORT} (tracks upstream ${{ env.UPSTREAM_STABLE_VERSION }})."
          
          # Finalize this new version entry (marks it as released for this distribution)
          dch --release --distribution "unstable" "" 
          
          echo "Updated changelog content:"
          cat debian/changelog
          
          # Output the version string for help2man (without ~dist suffix, as help2man version usually doesn't include it)
          echo "deb_package_version=${FULL_DEB_VERSION_BASE}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Build the Debian package
        env:
          # Make the package version available to debian/rules for help2man
          DEB_PACKAGE_VERSION: ${{ steps.changelog_update_step.outputs.deb_package_version }}
        run: |
          cd fan2go-package/_upstream_src # dpkg-buildpackage runs from the source root
          # -us -uc: don't sign source and changes (signing .deb happens later if needed for repo)
          # -b: binary-only build
          dpkg-buildpackage -us -uc -b
        shell: bash

      - name: List generated files
        run: ls -l fan2go-package/ # List files in the parent dir where .deb will be placed
        shell: bash

      - name: Run Lintian
        run: |
          # Lintian expects .changes file, which is one level up from _upstream_src
          lintian ../*.changes || echo "Lintian found issues, but continuing."
        working-directory: fan2go-package/_upstream_src
        shell: bash
        continue-on-error: true # Don't fail the build on lintian errors for now

      - name: Upload Debian package artifact
        uses: actions/upload-artifact@v4
        with:
          name: fan2go-build-artifacts-${{ matrix.dist }}-${{ matrix.arch }}-${{ github.ref_name }} # More generic name
          path: |
            fan2go-package/*.deb
            fan2go-package/*.changes
            fan2go-package/*.buildinfo
            fan2go-package/test_output_*.log # Upload the test log
            # Add lintian log if generated to a file, e.g. fan2go-package/lintian.log
          retention-days: 7

      - name: Create GitHub Release
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "${{ steps.changelog_update_step.outputs.deb_package_version }}"
          name: "fan2go ${{ steps.fetch_upstream_version.outputs.UPSTREAM_VERSION }}"
          body: |
            ### Build Details
            - **Debian Version**: ${{ steps.changelog_update_step.outputs.deb_package_version }}
            - **Build Date**: ${{ env.BUILD_TIMESTAMP }}
            - **Packaging Commit**: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
            - **Upstream Version**: ${{ steps.fetch_upstream_version.outputs.UPSTREAM_VERSION }}
            - **Distribution**: ${{ matrix.dist }}
            - **Architecture**: ${{ matrix.arch }}
          prerelease: true
          make_latest: true
          files: |
            fan2go-package/*.deb
            fan2go-package/*.changes
            fan2go-package/test_output_*.log
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
